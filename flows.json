[
    {
        "id": "8e6f93d6c1999015",
        "type": "tab",
        "label": "Vakuumpumpen",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "61d663c65d5d04a2",
        "type": "tab",
        "label": "WP1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cb52c966d2fad605",
        "type": "tab",
        "label": "WP2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f820c1bd7223bd88",
        "type": "tab",
        "label": "WP3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "28c240172645bd4e",
        "type": "tab",
        "label": "WP4",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "23ae8c9958392184",
        "type": "tab",
        "label": "Restore",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fe54917cf124892f",
        "type": "tab",
        "label": "File browser",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f97f75b309eab0be",
        "type": "tab",
        "label": "Logger",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5ab99c650d95a3f7",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0f7a1f209ffd4d33",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#007f7f",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#007f7f",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#007f7f",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#00cbcb",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#007f7f",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "OVUM Vakuumstand",
            "hideToolbar": "false",
            "allowSwipe": "mouse",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "58c2aa06.ef46e4",
        "type": "ui_tab",
        "name": "OVUM Vakuumstand",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e7f7ff66.2de07",
        "type": "ui_tab",
        "name": "Restore",
        "icon": "dashboard"
    },
    {
        "id": "db5ac7bc58fb5462",
        "type": "ui_tab",
        "name": "Files (New)",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1591b6c7b8497e57",
        "type": "ui_group",
        "name": "WP1",
        "tab": "58c2aa06.ef46e4",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "de078532d6f5e387",
        "type": "ui_group",
        "name": "WP2",
        "tab": "58c2aa06.ef46e4",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "422ba1667a7ab9f8",
        "type": "ui_group",
        "name": "WP3",
        "tab": "58c2aa06.ef46e4",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f31df9e398e4c15e",
        "type": "ui_group",
        "name": "WP4",
        "tab": "58c2aa06.ef46e4",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a53d8deeea11707a",
        "type": "ui_group",
        "name": "VP1",
        "tab": "58c2aa06.ef46e4",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5adbafdcfcc90c64",
        "type": "ui_group",
        "name": "VP2",
        "tab": "58c2aa06.ef46e4",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "212b7f06.b4731",
        "type": "ui_group",
        "name": "Gauge",
        "tab": "e7f7ff66.2de07",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "7c3d1ffe5de85af4",
        "type": "ui_group",
        "name": "File Browser",
        "tab": "db5ac7bc58fb5462",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b9eaf4515438b94a",
        "type": "ui_group",
        "name": "File Preview",
        "tab": "db5ac7bc58fb5462",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ef6702f2eebd5bef",
        "type": "cmi config",
        "description": "TA C.M.I.",
        "ip": "192.168.45.55",
        "canNode": "1",
        "interval": "2"
    },
    {
        "id": "ba51c7e6bf23486c",
        "type": "modbus-client",
        "name": "CMI Modbus Server",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.45.55",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "56",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "eeb221fb.ab27f",
        "type": "influxdb",
        "hostname": "192.168.45.58",
        "port": "8086",
        "protocol": "http",
        "database": "test",
        "name": "test",
        "usetls": true,
        "tls": "d50d0c9f.31e858",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "timeout": "",
        "rejectUnauthorized": true
    },
    {
        "id": "d50d0c9f.31e858",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "93b72251a36883d1",
        "type": "ui_group",
        "name": "File Browser",
        "tab": "8359c42a48e6ea33",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "8359c42a48e6ea33",
        "type": "ui_tab",
        "name": "Files",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2d4646b0db2f1313",
        "type": "ui_gauge",
        "z": "8e6f93d6c1999015",
        "name": "",
        "group": "a53d8deeea11707a",
        "order": 2,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Temp 1",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "60",
        "seg2": "75",
        "diff": false,
        "className": "",
        "x": 580,
        "y": 160,
        "wires": []
    },
    {
        "id": "4792b5d5ea1aed4f",
        "type": "ui_gauge",
        "z": "8e6f93d6c1999015",
        "name": "",
        "group": "a53d8deeea11707a",
        "order": 3,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Temp 2",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "60",
        "seg2": "75",
        "diff": false,
        "className": "",
        "x": 580,
        "y": 220,
        "wires": []
    },
    {
        "id": "0bbb900fda5f8a90",
        "type": "ui_gauge",
        "z": "8e6f93d6c1999015",
        "name": "",
        "group": "5adbafdcfcc90c64",
        "order": 2,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Temp 3",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "60",
        "seg2": "75",
        "diff": false,
        "className": "",
        "x": 580,
        "y": 400,
        "wires": []
    },
    {
        "id": "b29637cc286b1e69",
        "type": "ui_gauge",
        "z": "8e6f93d6c1999015",
        "name": "",
        "group": "5adbafdcfcc90c64",
        "order": 3,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Temp 4",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "60",
        "seg2": "75",
        "diff": false,
        "className": "",
        "x": 580,
        "y": 460,
        "wires": []
    },
    {
        "id": "eaee38cd727c1251",
        "type": "ui_gauge",
        "z": "8e6f93d6c1999015",
        "name": "",
        "group": "",
        "order": 2,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Temp 5",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "60",
        "seg2": "75",
        "diff": false,
        "className": "",
        "x": 580,
        "y": 640,
        "wires": []
    },
    {
        "id": "12972f49c15be411",
        "type": "ui_gauge",
        "z": "8e6f93d6c1999015",
        "name": "",
        "group": "",
        "order": 3,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Temp 6",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "60",
        "seg2": "75",
        "diff": false,
        "className": "",
        "x": 580,
        "y": 700,
        "wires": []
    },
    {
        "id": "6fa0c3400be1c116",
        "type": "ui_text",
        "z": "8e6f93d6c1999015",
        "group": "5adbafdcfcc90c64",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Magnetventil 2",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 600,
        "y": 280,
        "wires": []
    },
    {
        "id": "3e546ec86a098a36",
        "type": "ui_text",
        "z": "8e6f93d6c1999015",
        "group": "a53d8deeea11707a",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Magnetventil 1",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 600,
        "y": 40,
        "wires": []
    },
    {
        "id": "34e4382fd48aae50",
        "type": "ui_text",
        "z": "8e6f93d6c1999015",
        "group": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Magnetventil 3",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 600,
        "y": 520,
        "wires": []
    },
    {
        "id": "b88c8f75645447d7",
        "type": "ui_chart",
        "z": "8e6f93d6c1999015",
        "name": "",
        "group": "5adbafdcfcc90c64",
        "order": 1,
        "width": 6,
        "height": 3,
        "label": "Vakuumpumpe 2",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-1000",
        "ymax": "0",
        "removeOlder": "30",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 610,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "65876a0943268809",
        "type": "ui_chart",
        "z": "8e6f93d6c1999015",
        "name": "",
        "group": "",
        "order": 1,
        "width": "6",
        "height": "3",
        "label": "Vakuumpumpe 3",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-1000",
        "ymax": "0",
        "removeOlder": "30",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 610,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "fce49c478cef3616",
        "type": "ui_chart",
        "z": "8e6f93d6c1999015",
        "name": "",
        "group": "a53d8deeea11707a",
        "order": 1,
        "width": 6,
        "height": 3,
        "label": "Vakuumpumpe 1",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-1000",
        "ymax": "0",
        "removeOlder": "30",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 610,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "4947b6e5851162dd",
        "type": "cmi in",
        "z": "8e6f93d6c1999015",
        "cmi": "ef6702f2eebd5bef",
        "name": "Pressure 2",
        "item": "2",
        "source": "0",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 160,
        "y": 100,
        "wires": [
            [
                "fce49c478cef3616"
            ]
        ]
    },
    {
        "id": "0dac9e1e9ba2ace0",
        "type": "cmi in",
        "z": "8e6f93d6c1999015",
        "cmi": "ef6702f2eebd5bef",
        "name": "Pressure 4",
        "item": "4",
        "source": "0",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 160,
        "y": 340,
        "wires": [
            [
                "b88c8f75645447d7"
            ]
        ]
    },
    {
        "id": "ad726035dfa06db6",
        "type": "cmi in",
        "z": "8e6f93d6c1999015",
        "cmi": "ef6702f2eebd5bef",
        "name": "Temp 1",
        "item": "9",
        "source": "0",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "2d4646b0db2f1313"
            ]
        ]
    },
    {
        "id": "de12cbaa5501373f",
        "type": "cmi in",
        "z": "8e6f93d6c1999015",
        "cmi": "ef6702f2eebd5bef",
        "name": "Temp 2",
        "item": "10",
        "source": "0",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "4792b5d5ea1aed4f"
            ]
        ]
    },
    {
        "id": "89be54a0f9f4c0fb",
        "type": "cmi in",
        "z": "8e6f93d6c1999015",
        "cmi": "ef6702f2eebd5bef",
        "name": "Temp 3",
        "item": "11",
        "source": "0",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 170,
        "y": 400,
        "wires": [
            [
                "0bbb900fda5f8a90"
            ]
        ]
    },
    {
        "id": "f0567c3deaf9dca0",
        "type": "cmi in",
        "z": "8e6f93d6c1999015",
        "cmi": "ef6702f2eebd5bef",
        "name": "Temp 4",
        "item": "12",
        "source": "0",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 170,
        "y": 460,
        "wires": [
            [
                "b29637cc286b1e69"
            ]
        ]
    },
    {
        "id": "a3b9352113447f8d",
        "type": "cmi in",
        "z": "8e6f93d6c1999015",
        "cmi": "ef6702f2eebd5bef",
        "name": "Pressure 6",
        "item": "6",
        "source": "0",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 160,
        "y": 580,
        "wires": [
            [
                "65876a0943268809"
            ]
        ]
    },
    {
        "id": "b0bd15f59e1c429c",
        "type": "cmi in",
        "z": "8e6f93d6c1999015",
        "cmi": "ef6702f2eebd5bef",
        "name": "Temp 5",
        "item": "13",
        "source": "0",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 170,
        "y": 640,
        "wires": [
            [
                "eaee38cd727c1251"
            ]
        ]
    },
    {
        "id": "d890a15763d9dda8",
        "type": "cmi in",
        "z": "8e6f93d6c1999015",
        "cmi": "ef6702f2eebd5bef",
        "name": "Temp 6",
        "item": "14",
        "source": "0",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 170,
        "y": 700,
        "wires": [
            [
                "12972f49c15be411"
            ]
        ]
    },
    {
        "id": "2c5c58ab31243918",
        "type": "cmi in",
        "z": "8e6f93d6c1999015",
        "cmi": "ef6702f2eebd5bef",
        "name": "Magnetventil 1",
        "item": "1",
        "source": "1",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "3e546ec86a098a36"
            ]
        ]
    },
    {
        "id": "efd959b4e4661483",
        "type": "cmi in",
        "z": "8e6f93d6c1999015",
        "cmi": "ef6702f2eebd5bef",
        "name": "Magnetventil 2",
        "item": "4",
        "source": "1",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 140,
        "y": 280,
        "wires": [
            [
                "6fa0c3400be1c116"
            ]
        ]
    },
    {
        "id": "9398100a3c56d871",
        "type": "cmi in",
        "z": "8e6f93d6c1999015",
        "cmi": "ef6702f2eebd5bef",
        "name": "Magnetventil 3",
        "item": "7",
        "source": "1",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 140,
        "y": 520,
        "wires": [
            [
                "34e4382fd48aae50"
            ]
        ]
    },
    {
        "id": "f43489c54b3ce0d4",
        "type": "inject",
        "z": "61d663c65d5d04a2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "96bd7268dbc259c2",
                "4a2c7889b033f882"
            ]
        ]
    },
    {
        "id": "96bd7268dbc259c2",
        "type": "function",
        "z": "61d663c65d5d04a2",
        "name": "function 1",
        "func": "msg.payload = 900\nmsg.topic = \"Messzeit\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 180,
        "wires": [
            [
                "cf30e5419fedd884"
            ]
        ]
    },
    {
        "id": "4a2c7889b033f882",
        "type": "function",
        "z": "61d663c65d5d04a2",
        "name": "function 2",
        "func": "msg.payload = 450\nmsg.topic = \"Restzeit\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 220,
        "wires": [
            [
                "cf30e5419fedd884",
                "87be1f3f2b0360b2"
            ]
        ]
    },
    {
        "id": "44734ecb313db565",
        "type": "ui_text",
        "z": "61d663c65d5d04a2",
        "group": "1591b6c7b8497e57",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Überdruckvetil WP1",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 620,
        "y": 40,
        "wires": []
    },
    {
        "id": "87be1f3f2b0360b2",
        "type": "ui_text",
        "z": "61d663c65d5d04a2",
        "group": "1591b6c7b8497e57",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Messzeit WP1",
        "format": "{{msg.payload}} Sek",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 600,
        "y": 220,
        "wires": []
    },
    {
        "id": "f563ef869b6642b1",
        "type": "ui_text",
        "z": "61d663c65d5d04a2",
        "group": "1591b6c7b8497e57",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Druckverlust WP1",
        "format": "{{msg.payload}} mbar",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 610,
        "y": 300,
        "wires": []
    },
    {
        "id": "668723cb7ac53144",
        "type": "ui_text",
        "z": "61d663c65d5d04a2",
        "group": "1591b6c7b8497e57",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Seriennummer 1",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 610,
        "y": 100,
        "wires": []
    },
    {
        "id": "639fb3a6663fcca4",
        "type": "ui_chart",
        "z": "61d663c65d5d04a2",
        "name": "",
        "group": "1591b6c7b8497e57",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Druck WP1",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "-1000",
        "ymax": "0",
        "removeOlder": "15",
        "removeOlderPoints": "100",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 570,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "cf30e5419fedd884",
        "type": "ui_chart",
        "z": "61d663c65d5d04a2",
        "name": "",
        "group": "1591b6c7b8497e57",
        "order": 4,
        "width": "0",
        "height": "0",
        "label": "Messzeit",
        "chartType": "pie",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "200",
        "ymax": "900",
        "removeOlder": "30",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": "50",
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 580,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "02239ec65fc616be",
        "type": "cmi in",
        "z": "61d663c65d5d04a2",
        "cmi": "ef6702f2eebd5bef",
        "name": "Pressure 1",
        "item": "1",
        "source": "0",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 180,
        "y": 380,
        "wires": [
            [
                "639fb3a6663fcca4",
                "0c325ea5e24aee6e",
                "e4483f25e9b66328"
            ]
        ]
    },
    {
        "id": "7faf11fff9ca8b96",
        "type": "cmi in",
        "z": "61d663c65d5d04a2",
        "cmi": "ef6702f2eebd5bef",
        "name": "Überdruckventil 1",
        "item": "3",
        "source": "1",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "44734ecb313db565"
            ]
        ]
    },
    {
        "id": "38eee3690a5c708f",
        "type": "cmi in",
        "z": "61d663c65d5d04a2",
        "cmi": "ef6702f2eebd5bef",
        "name": "SN 1",
        "item": "17",
        "source": "0",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "668723cb7ac53144"
            ]
        ]
    },
    {
        "id": "754bac4296686af7",
        "type": "inject",
        "z": "61d663c65d5d04a2",
        "name": "",
        "props": [
            {
                "p": "serialnumber",
                "v": "12345678",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 480,
        "wires": [
            [
                "e4483f25e9b66328"
            ]
        ]
    },
    {
        "id": "63d400f80df1838c",
        "type": "debug",
        "z": "61d663c65d5d04a2",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 560,
        "wires": []
    },
    {
        "id": "a7d6868719c2112d",
        "type": "json",
        "z": "61d663c65d5d04a2",
        "name": "",
        "property": "pressure",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "76ed89e23b46d303",
        "type": "function",
        "z": "61d663c65d5d04a2",
        "name": "function 3",
        "func": "// Tároljuk el az előző serialnumber-t a context-ben\ncontext.previousSerialNumber = context.previousSerialNumber || null;\n\n// Ellenőrizzük, hogy a serialnumber változott-e\nif (msg.serialnumber !== context.previousSerialNumber) {\n  // Ha változott, akkor beállítjuk a flag-et és frissítjük az előző serialnumber-t\n  msg.serialnumber_changed = true;\n  context.previousSerialNumber = msg.serialnumber;\n} else {\n  msg.serialnumber_changed = false; // Ha nem változott, ne legyen true\n}\n\n// ... (A többi kód ugyanaz, mint előtte)\n\n// Tároljuk el az előző nyomásértéket a context-ben\ncontext.previousPressure = context.previousPressure || null;\n\nvar pressure = msg.pressure;\n\nif (pressure === undefined || pressure === null || isNaN(pressure)) {\n  console.error(\"Nem található vagy érvénytelen nyomásérték a msg.payload-ban: \" + pressure);\n  \n  // Ha nincs érvényes nyomásérték, használjuk az előzőt, ha van\n  pressure = context.previousPressure !== null ? context.previousPressure : 0;\n} else {\n    // Ha van érvényes nyomásérték, frissítsük az előzőt\n    context.previousPressure = pressure;\n}\n\nvar date = new Date(); // Aktuális dátum és idő\nvar formattedDate = date.toLocaleDateString(\"de-DE\"); // Dátum formázása magyar lokalizáció szerint (éééé.hh.nn.)\nvar formattedTime = date.toLocaleTimeString(\"de-DE\"); // Idő formázása magyar lokalizáció szerint (óó:pp:mm)\nvar timestamp = formattedDate + \" \" + formattedTime; // Dátum és idő kombinálása\n\ncontext.data = context.data || [];\ncontext.data.push({\n    timestamp: timestamp,\n    pressure: pressure\n});\n\nvar csv = \"Timestamp,Pressure\\n\";\ncontext.data.forEach(function(item) {\n    csv += item.timestamp + \",\" + item.pressure + \"\\n\";\n});\n\nvar newMsg = { ...msg };\nnewMsg.payload = csv;\n\nvar fileName = \"sn\" + msg.serialnumber + \"_pressure_loss.csv\";\n\nvar filePath = \"/home/gabor/\" + fileName;\n\nnewMsg.filename = filePath;\n\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 480,
        "wires": [
            [
                "a7c756a355c6f2ba",
                "49c561fd45d99556"
            ]
        ]
    },
    {
        "id": "a7c756a355c6f2ba",
        "type": "debug",
        "z": "61d663c65d5d04a2",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 480,
        "wires": []
    },
    {
        "id": "49c561fd45d99556",
        "type": "file",
        "z": "61d663c65d5d04a2",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1040,
        "y": 580,
        "wires": [
            [
                "b934b4c0322bc9ed"
            ]
        ]
    },
    {
        "id": "0c325ea5e24aee6e",
        "type": "debug",
        "z": "61d663c65d5d04a2",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 320,
        "wires": []
    },
    {
        "id": "b934b4c0322bc9ed",
        "type": "debug",
        "z": "61d663c65d5d04a2",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 580,
        "wires": []
    },
    {
        "id": "e4483f25e9b66328",
        "type": "change",
        "z": "61d663c65d5d04a2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pressure",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 480,
        "wires": [
            [
                "76ed89e23b46d303",
                "63d400f80df1838c"
            ]
        ]
    },
    {
        "id": "7cd15b310a690116",
        "type": "function",
        "z": "cb52c966d2fad605",
        "name": "32bit converter",
        "func": "var msg0 = {payload:(msg.payload[1]<<16) + msg.payload[0]}\nreturn msg0;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "9bb7bdb1eae4948e",
        "type": "ui_text",
        "z": "cb52c966d2fad605",
        "group": "de078532d6f5e387",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Seriennummer 2",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 610,
        "y": 100,
        "wires": []
    },
    {
        "id": "0913bfd313b2f67c",
        "type": "ui_text",
        "z": "cb52c966d2fad605",
        "group": "de078532d6f5e387",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Überdruckvetil WP2",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 620,
        "y": 40,
        "wires": []
    },
    {
        "id": "730d51ad838c3289",
        "type": "ui_text",
        "z": "cb52c966d2fad605",
        "group": "de078532d6f5e387",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Messzeit WP2",
        "format": "{{msg.payload}} Sek",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 600,
        "y": 220,
        "wires": []
    },
    {
        "id": "3be77a102f31d277",
        "type": "ui_text",
        "z": "cb52c966d2fad605",
        "group": "de078532d6f5e387",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Druckverlust WP2",
        "format": "{{msg.payload}} mbar",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 610,
        "y": 280,
        "wires": []
    },
    {
        "id": "244d8d9f6e6c67f4",
        "type": "ui_chart",
        "z": "cb52c966d2fad605",
        "name": "",
        "group": "de078532d6f5e387",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Druck WP2",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-1000",
        "ymax": "0",
        "removeOlder": "30",
        "removeOlderPoints": "100",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 590,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e2976faf21ef3429",
        "type": "cmi in",
        "z": "cb52c966d2fad605",
        "cmi": "ef6702f2eebd5bef",
        "name": "Pressure 3",
        "item": "3",
        "source": "0",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 160,
        "y": 160,
        "wires": [
            [
                "244d8d9f6e6c67f4"
            ]
        ]
    },
    {
        "id": "1f0472a9c58261f4",
        "type": "cmi in",
        "z": "cb52c966d2fad605",
        "cmi": "ef6702f2eebd5bef",
        "name": "Überdruckventil 2",
        "item": "6",
        "source": "1",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "0913bfd313b2f67c"
            ]
        ]
    },
    {
        "id": "32cc5769a07388cf",
        "type": "cmi in",
        "z": "cb52c966d2fad605",
        "cmi": "ef6702f2eebd5bef",
        "name": "SN 2",
        "item": "18",
        "source": "0",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "9bb7bdb1eae4948e"
            ]
        ]
    },
    {
        "id": "e3ba7a980ec17e5e",
        "type": "function",
        "z": "f820c1bd7223bd88",
        "name": "32bit converter",
        "func": "var msg0 = {payload:(msg.payload[1]<<16) + msg.payload[0]}\nreturn msg0;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "12bbbd87a10398fa",
        "type": "ui_text",
        "z": "f820c1bd7223bd88",
        "group": "422ba1667a7ab9f8",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Seriennummer 3",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 610,
        "y": 100,
        "wires": []
    },
    {
        "id": "2c0c38adf570a5e0",
        "type": "ui_text",
        "z": "f820c1bd7223bd88",
        "group": "422ba1667a7ab9f8",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Überdruckvetil WP3",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 620,
        "y": 40,
        "wires": []
    },
    {
        "id": "6a317b620df64d1c",
        "type": "ui_text",
        "z": "f820c1bd7223bd88",
        "group": "422ba1667a7ab9f8",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Messzeit WP3",
        "format": "{{msg.payload}} Sek",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 600,
        "y": 220,
        "wires": []
    },
    {
        "id": "371420ab9311d8d9",
        "type": "ui_text",
        "z": "f820c1bd7223bd88",
        "group": "422ba1667a7ab9f8",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Druckverlust WP3",
        "format": "{{msg.payload}} mbar",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 610,
        "y": 280,
        "wires": []
    },
    {
        "id": "04b283f4a235b802",
        "type": "ui_chart",
        "z": "f820c1bd7223bd88",
        "name": "",
        "group": "422ba1667a7ab9f8",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Druck WP3",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-1000",
        "ymax": "0",
        "removeOlder": "30",
        "removeOlderPoints": "100",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 590,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e018f54e4e011ee6",
        "type": "modbus-read",
        "z": "f820c1bd7223bd88",
        "name": "Serialnumber 3",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "3",
        "dataType": "HoldingRegister",
        "adr": "74",
        "quantity": "2",
        "rate": "10",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "ba51c7e6bf23486c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 140,
        "y": 440,
        "wires": [
            [
                "e3ba7a980ec17e5e"
            ],
            []
        ]
    },
    {
        "id": "30e635d19735dd29",
        "type": "cmi in",
        "z": "f820c1bd7223bd88",
        "cmi": "ef6702f2eebd5bef",
        "name": "Pressure 5",
        "item": "5",
        "source": "0",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 160,
        "y": 160,
        "wires": [
            [
                "04b283f4a235b802"
            ]
        ]
    },
    {
        "id": "57fc2ea8d083fcca",
        "type": "cmi in",
        "z": "f820c1bd7223bd88",
        "cmi": "ef6702f2eebd5bef",
        "name": "Überdruckventil 3",
        "item": "9",
        "source": "1",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "2c0c38adf570a5e0"
            ]
        ]
    },
    {
        "id": "0edd0311de268fe6",
        "type": "cmi in",
        "z": "f820c1bd7223bd88",
        "cmi": "ef6702f2eebd5bef",
        "name": "SN 3",
        "item": "19",
        "source": "0",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "12bbbd87a10398fa"
            ]
        ]
    },
    {
        "id": "bce431684206e30c",
        "type": "function",
        "z": "28c240172645bd4e",
        "name": "32bit converter",
        "func": "var msg0 = {payload:(msg.payload[1]<<16) + msg.payload[0]}\nreturn msg0;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "bc0279d6d6d66c7a",
        "type": "ui_text",
        "z": "28c240172645bd4e",
        "group": "f31df9e398e4c15e",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Messzeit WP4",
        "format": "{{msg.payload}} Sek",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 600,
        "y": 220,
        "wires": []
    },
    {
        "id": "7fb0ee86dd7afcef",
        "type": "ui_text",
        "z": "28c240172645bd4e",
        "group": "f31df9e398e4c15e",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Druckverlust WP4",
        "format": "{{msg.payload}} mbar",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 610,
        "y": 280,
        "wires": []
    },
    {
        "id": "b2c11f424328c412",
        "type": "ui_text",
        "z": "28c240172645bd4e",
        "group": "f31df9e398e4c15e",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Seriennummer 4",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 610,
        "y": 100,
        "wires": []
    },
    {
        "id": "89644dc73fa4bfb2",
        "type": "ui_text",
        "z": "28c240172645bd4e",
        "group": "f31df9e398e4c15e",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Überdruckvetil WP4",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 620,
        "y": 40,
        "wires": []
    },
    {
        "id": "153d8ec83f3e3c6a",
        "type": "ui_chart",
        "z": "28c240172645bd4e",
        "name": "",
        "group": "f31df9e398e4c15e",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Druck WP4",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-1000",
        "ymax": "0",
        "removeOlder": "30",
        "removeOlderPoints": "100",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 590,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "07ee0e3d7d9d0fc7",
        "type": "modbus-read",
        "z": "28c240172645bd4e",
        "name": "Serialnumber 4",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "4",
        "dataType": "HoldingRegister",
        "adr": "74",
        "quantity": "2",
        "rate": "10",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "ba51c7e6bf23486c",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 440,
        "wires": [
            [
                "bce431684206e30c"
            ],
            []
        ]
    },
    {
        "id": "4c5831159efa3864",
        "type": "cmi in",
        "z": "28c240172645bd4e",
        "cmi": "ef6702f2eebd5bef",
        "name": "Pressure 7",
        "item": "7",
        "source": "0",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 160,
        "y": 160,
        "wires": [
            [
                "153d8ec83f3e3c6a"
            ]
        ]
    },
    {
        "id": "597d947bf4559845",
        "type": "cmi in",
        "z": "28c240172645bd4e",
        "cmi": "ef6702f2eebd5bef",
        "name": "SN 4",
        "item": "20",
        "source": "0",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "b2c11f424328c412"
            ]
        ]
    },
    {
        "id": "74556f2b70a61e63",
        "type": "cmi in",
        "z": "28c240172645bd4e",
        "cmi": "ef6702f2eebd5bef",
        "name": "Überdruckvetil 4",
        "item": "12",
        "source": "1",
        "timestamp": "0",
        "skip": "0",
        "severity": "0",
        "x": 140,
        "y": 40,
        "wires": [
            [
                "89644dc73fa4bfb2"
            ]
        ]
    },
    {
        "id": "0b61ed2d88682e3f",
        "type": "file",
        "z": "23ae8c9958392184",
        "name": "",
        "filename": "/home/ovum/chart.log",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "x": 740,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "28a4eff1523a3b04",
        "type": "file in",
        "z": "23ae8c9958392184",
        "name": "",
        "filename": "/home/ovum/chart.log",
        "filenameType": "str",
        "format": "utf8",
        "allProps": false,
        "x": 440,
        "y": 460,
        "wires": [
            [
                "b0ad92b8f04430e5"
            ]
        ]
    },
    {
        "id": "e5c9d15b18b90c65",
        "type": "json",
        "z": "23ae8c9958392184",
        "name": "",
        "x": 690,
        "y": 160,
        "wires": [
            [
                "f9c7a725cf2c7658"
            ]
        ]
    },
    {
        "id": "b0ad92b8f04430e5",
        "type": "json",
        "z": "23ae8c9958392184",
        "name": "",
        "x": 610,
        "y": 460,
        "wires": [
            [
                "5f9474b7153f5ee9"
            ]
        ]
    },
    {
        "id": "f9c7a725cf2c7658",
        "type": "function",
        "z": "23ae8c9958392184",
        "name": "",
        "func": "if (msg.topic === \"save\") {\n    msg.payload = context.last;\n    return msg;\n}\nelse {\n    context.last = msg.payload;\n}\nreturn null;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 320,
        "wires": [
            [
                "0b61ed2d88682e3f"
            ]
        ]
    },
    {
        "id": "da2c47557c34dd61",
        "type": "ui_button",
        "z": "23ae8c9958392184",
        "name": "",
        "group": "212b7f06.b4731",
        "order": 2,
        "width": "2",
        "height": "1",
        "label": "Inject",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 250,
        "y": 160,
        "wires": [
            [
                "7343e5ea61328c71"
            ]
        ]
    },
    {
        "id": "c3674e9a8a432b11",
        "type": "ui_button",
        "z": "23ae8c9958392184",
        "name": "",
        "group": "212b7f06.b4731",
        "order": 4,
        "width": "2",
        "height": "1",
        "label": "restore",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 250,
        "y": 460,
        "wires": [
            [
                "28a4eff1523a3b04"
            ]
        ]
    },
    {
        "id": "e32a35d3d315463e",
        "type": "ui_button",
        "z": "23ae8c9958392184",
        "name": "",
        "group": "212b7f06.b4731",
        "order": 3,
        "width": "2",
        "height": "1",
        "label": "save",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "save",
        "x": 250,
        "y": 320,
        "wires": [
            [
                "f9c7a725cf2c7658"
            ]
        ]
    },
    {
        "id": "5f9474b7153f5ee9",
        "type": "ui_chart",
        "z": "23ae8c9958392184",
        "name": "",
        "group": "212b7f06.b4731",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "",
        "ymin": "",
        "ymax": "",
        "removeOlder": "15",
        "removeOlderPoints": "100",
        "removeOlderUnit": "60",
        "cutout": 0,
        "outputs": 1,
        "x": 550,
        "y": 160,
        "wires": [
            [
                "e5c9d15b18b90c65"
            ]
        ]
    },
    {
        "id": "7343e5ea61328c71",
        "type": "random",
        "z": "23ae8c9958392184",
        "name": "",
        "low": "0",
        "high": "10",
        "inte": "true",
        "x": 400,
        "y": 160,
        "wires": [
            [
                "5f9474b7153f5ee9"
            ]
        ]
    },
    {
        "id": "20fc8a44f4200a3c",
        "type": "http in",
        "z": "fe54917cf124892f",
        "name": "",
        "url": "/download",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 600,
        "wires": [
            [
                "37aedfdef5057ab8"
            ]
        ]
    },
    {
        "id": "7cdc230a7ef11bb1",
        "type": "http response",
        "z": "fe54917cf124892f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1070,
        "y": 600,
        "wires": []
    },
    {
        "id": "37aedfdef5057ab8",
        "type": "function",
        "z": "fe54917cf124892f",
        "name": "Get the file name",
        "func": "msg.filename = msg.req.query.filename;\nmsg.contentdisposition = \"attachment; filename=\\\"\" + msg.req.query.filename.replace(/^.*(\\\\|\\/|\\:)/, '') + \"\\\"\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 600,
        "wires": [
            [
                "49cc644baab454d4"
            ]
        ],
        "outputLabels": [
            "Folder selected"
        ]
    },
    {
        "id": "49cc644baab454d4",
        "type": "file in",
        "z": "fe54917cf124892f",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 720,
        "y": 600,
        "wires": [
            [
                "596acfb88bb2117c"
            ]
        ]
    },
    {
        "id": "596acfb88bb2117c",
        "type": "change",
        "z": "fe54917cf124892f",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "text/csv",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Content-Disposition",
                "pt": "msg",
                "to": "contentdisposition",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 600,
        "wires": [
            [
                "7cdc230a7ef11bb1"
            ]
        ]
    },
    {
        "id": "3557605b12a7d131",
        "type": "ui_etable",
        "z": "fe54917cf124892f",
        "payload": "[{\"title\":\"Type\",\"field\":\"icon\",\"formatter\":\"html\",\"width\":50},{\"title\":\"Name\",\"field\":\"fname\"},{\"title\":\"Size\",\"field\":\"stat.size\",\"sorter\":\"number\",\"width\":100,\"sorterParams\":{\"thousandSeparator\":\",\",\"decimalSeparator\":\".\",\"alignEmptyValues\":\"top\"}},{\"title\":\"Created\",\"field\":\"stat.created\",\"formatter\":\"datetime\",\"width\":200,\"formatterParams\":{\"outputFormat\":\"yyyy.MM.DD HH:mm:ss\",\"invalidPlaceholder\":\"(invalid date)\",\"timezone\":\"system\"}},{\"title\":\"Changed\",\"field\":\"stat.changed\",\"formatter\":\"datetime\",\"width\":200,\"formatterParams\":{\"outputFormat\":\"yyyy.MM.DD HH:mm:ss\",\"invalidPlaceholder\":\"(invalid date)\",\"timezone\":\"system\"}}]",
        "payloadType": "json",
        "options": "{\"movableColumns\":true,\"resizableColumns\":true,\"selectable\":1,\"responsiveLayout\":\"collapse\",\"autoResize\":true,\"layout\":\"fitColumns\",\"pagination\":\"local\",\"height\":\"100%\"}",
        "group": "7c3d1ffe5de85af4",
        "name": "File Browser",
        "order": 6,
        "width": "18",
        "height": "10",
        "columns": [],
        "outputs": 1,
        "cts": false,
        "x": 830,
        "y": 200,
        "wires": [
            [
                "8a9563fc8d848d29",
                "bc7344cb912e3914",
                "d1b51e6221d81c9e",
                "7cea2f877f87e3ca"
            ]
        ]
    },
    {
        "id": "194a8077e4c8311b",
        "type": "comment",
        "z": "fe54917cf124892f",
        "name": "New File Browser",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "4c62104c10c20ebd",
        "type": "inject",
        "z": "fe54917cf124892f",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "change",
        "payload": "filebrowser_default_folder",
        "payloadType": "global",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "179b082f62a7823e"
            ]
        ]
    },
    {
        "id": "179b082f62a7823e",
        "type": "function",
        "z": "fe54917cf124892f",
        "name": "Folder handling",
        "func": "let folder = context.get(\"folder\");\nif (folder===undefined) {\n    folder=\"/\";\n    context.set(\"folder\", folder);\n}\n\nlet hidden = context.get(\"hidden\");\nif (hidden===undefined) {\n    hidden=false;\n    context.set(\"hidden\", hidden);\n}\n\nif (msg.topic===\"up\") {\n    var the_arr = folder.split('/');\n    the_arr.pop();\n    folder=the_arr.join('/'); \n    context.set(\"folder\", folder);\n}\nif (msg.topic===\"change\") {\n    folder=msg.payload;    \n    context.set(\"folder\", folder);\n}\nif (msg.topic===\"hidden\") {\n    hidden=msg.payload;    \n    context.set(\"hidden\", hidden);\n}\n\nmsg.payload = {\"start\":folder, \"hidden\": hidden};\nflow.set(\"folder\", folder);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 200,
        "wires": [
            [
                "827f29b462e2e049",
                "5e41127cc0347f3a"
            ]
        ]
    },
    {
        "id": "827f29b462e2e049",
        "type": "fs-file-lister",
        "z": "fe54917cf124892f",
        "name": "Files",
        "start": "/home/ovum",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "both",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 510,
        "y": 200,
        "wires": [
            [
                "09aeec3a5a2b5b59",
                "5caa1aeabee2f1f9"
            ]
        ]
    },
    {
        "id": "09aeec3a5a2b5b59",
        "type": "function",
        "z": "fe54917cf124892f",
        "name": "Prep Data",
        "func": "function convertDate(local) {\n    let d = new Date(local);\n    d.setTime(d.getTime()+3600*1000);\n    return d.toISOString().slice(0, 19).replace('T', ' ');\n}\n\nif (msg.topic === \"quickfilter\") {\n    let filter = msg.payload;\n    msg.payload = flow.get(\"currentfolder\").slice();\n    if (msg.payload !== \"\") {\n        for (var i = msg.payload.length-1; i >= 0; i--) {\n            if (!msg.payload[i].fname.includes(filter)) {\n                msg.payload.splice(i,1);\n            }\n        }\n    }\n    return msg;\n}\n\nfor (var i=0; i<msg.payload.length; i++) {\n   // msg.payload[i].stat.created = convertDate(msg.payload[i].stat.created);\n   // msg.payload[i].stat.changed = convertDate(msg.payload[i].stat.changed);\n   // msg.payload[i].stat.accessed = convertDate(msg.payload[i].stat.accessed);\n   // msg.payload[i].stat.statusChanged = convertDate(msg.payload[i].stat.statusChanged);\n    msg.payload[i].fname = msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '');\n    if (msg.payload[i].stat.isDirectory) {\n        msg.payload[i].ext = \"folder\";\n        msg.payload[i].icon = \"<i class=\\\"fa fa-folder-o\\\"></i>\";\n    } else {\n        msg.payload[i].ext = msg.payload[i].fname.split('.').pop().toLowerCase();\n        msg.payload[i].downloadlink = \"/download?filename=\"+msg.payload[i].name;\n        switch (msg.payload[i].ext) {\n            case \"csv\":\n            case \"txt\":\n                msg.payload[i].icon = \"<i class=\\\"fa fa-file-text-o\\\"></i>\";\n                break;\n            case \"jpg\":\n            case \"jpeg\":\n            case \"png\":\n            case \"gif\":\n                msg.payload[i].icon = \"<i class=\\\"fa fa-file-image-o\\\"></i>\";\n                break;\n            case \"json\":\n            case \"py\":\n            case \"sh\":\n                msg.payload[i].icon = \"<i class=\\\"fa fa-file-code-o\\\"></i>\";\n                break;\n            default:\n                msg.payload[i].icon = \"<i class=\\\"fa fa-file-o\\\"></i>\";\n        }\n    }\n}\nflow.set(\"currentfolder\",msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 200,
        "wires": [
            [
                "3557605b12a7d131"
            ]
        ]
    },
    {
        "id": "8e4c80e74dd159df",
        "type": "inject",
        "z": "fe54917cf124892f",
        "name": "Default folder",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "/home/ovum",
        "payloadType": "str",
        "x": 160,
        "y": 100,
        "wires": [
            [
                "fc30aa4c18c7df42"
            ]
        ]
    },
    {
        "id": "fc30aa4c18c7df42",
        "type": "change",
        "z": "fe54917cf124892f",
        "name": "Store settings",
        "rules": [
            {
                "t": "set",
                "p": "filebrowser_default_folder",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "7b08539945ca0580",
        "type": "ui_button",
        "z": "fe54917cf124892f",
        "name": "",
        "group": "7c3d1ffe5de85af4",
        "order": 1,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "refresh",
        "topicType": "str",
        "x": 120,
        "y": 200,
        "wires": [
            [
                "179b082f62a7823e"
            ]
        ]
    },
    {
        "id": "69cc6a3c0f83db35",
        "type": "ui_button",
        "z": "fe54917cf124892f",
        "name": "",
        "group": "b9eaf4515438b94a",
        "order": 2,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Delete",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "delete",
        "topicType": "str",
        "x": 990,
        "y": 300,
        "wires": [
            [
                "7cea2f877f87e3ca"
            ]
        ]
    },
    {
        "id": "6c0c6411100d451e",
        "type": "ui_button",
        "z": "fe54917cf124892f",
        "name": "",
        "group": "7c3d1ffe5de85af4",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Up",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "arrow_upwards",
        "payload": "",
        "payloadType": "str",
        "topic": "up",
        "topicType": "str",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "179b082f62a7823e"
            ]
        ]
    },
    {
        "id": "7e8663eb65cd0342",
        "type": "ui_button",
        "z": "fe54917cf124892f",
        "name": "",
        "group": "7c3d1ffe5de85af4",
        "order": 2,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "autorenew",
        "payload": "filebrowser_default_folder",
        "payloadType": "global",
        "topic": "change",
        "topicType": "str",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "179b082f62a7823e"
            ]
        ]
    },
    {
        "id": "8c7e8e61c5ff7315",
        "type": "ui_switch",
        "z": "fe54917cf124892f",
        "name": "",
        "label": "Hidden",
        "tooltip": "Show hidden files or not",
        "group": "7c3d1ffe5de85af4",
        "order": 5,
        "width": "2",
        "height": "1",
        "passthru": false,
        "decouple": "false",
        "topic": "hidden",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "check_box",
        "oncolor": "#000000",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "check_box_outline_blank",
        "offcolor": "#000000",
        "animate": true,
        "className": "",
        "x": 120,
        "y": 320,
        "wires": [
            [
                "179b082f62a7823e"
            ]
        ]
    },
    {
        "id": "eaa1b785a82474e8",
        "type": "ui_template",
        "z": "fe54917cf124892f",
        "group": "b9eaf4515438b94a",
        "name": "File Preview",
        "order": 3,
        "width": "10",
        "height": "11",
        "format": "<div ng-bind-html=\"msg.payload\" height=\"100%\" style=\"height: 100%;\"><br/>\n</div>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1270,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "8a9563fc8d848d29",
        "type": "ui_text",
        "z": "fe54917cf124892f",
        "group": "b9eaf4515438b94a",
        "order": 1,
        "width": "5",
        "height": "1",
        "name": "Filename",
        "label": "",
        "format": "{{msg.payload.fname}}",
        "layout": "row-left",
        "className": "",
        "x": 1140,
        "y": 200,
        "wires": []
    },
    {
        "id": "bc7344cb912e3914",
        "type": "switch",
        "z": "fe54917cf124892f",
        "name": "File type",
        "property": "payload.ext",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "csv",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "txt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "json",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sh",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "py",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "jpg",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "jpeg",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "png",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "gif",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 10,
        "x": 380,
        "y": 440,
        "wires": [
            [
                "46193b8e97173164"
            ],
            [
                "46193b8e97173164"
            ],
            [
                "46193b8e97173164"
            ],
            [
                "46193b8e97173164"
            ],
            [
                "46193b8e97173164"
            ],
            [
                "a97a0941fe188d60"
            ],
            [
                "a97a0941fe188d60"
            ],
            [
                "a97a0941fe188d60"
            ],
            [
                "a97a0941fe188d60"
            ],
            [
                "6ae3b5a5d657f2f8"
            ]
        ]
    },
    {
        "id": "46193b8e97173164",
        "type": "function",
        "z": "fe54917cf124892f",
        "name": "Get the file name",
        "func": "if (msg.payload.stat.size<200000) {\n    msg.filename = msg.payload.name;\n    return [msg,null];\n} else {\n    return [null,msg];  \n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 400,
        "wires": [
            [
                "4160aa2b7abcd767"
            ],
            [
                "ec346886c2c98b9b"
            ]
        ],
        "outputLabels": [
            "Folder selected",
            ""
        ]
    },
    {
        "id": "4160aa2b7abcd767",
        "type": "file in",
        "z": "fe54917cf124892f",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 780,
        "y": 400,
        "wires": [
            [
                "6ddfe0872aa55cab"
            ]
        ]
    },
    {
        "id": "6ddfe0872aa55cab",
        "type": "function",
        "z": "fe54917cf124892f",
        "name": "Div text",
        "func": "function HTMLEncode(str) {\n    var i = str.length,\n        aRet = [];\n\n    while (i--) {\n        var iC = str[i].charCodeAt();\n        if (iC < 65 || iC > 127 || (iC > 90 && iC < 97)) {\n            aRet[i] = '&#' + iC + ';';\n        } else {\n            aRet[i] = str[i];\n        }\n    }\n    return aRet.join('');\n}\n\nlet text = \"<div>\";\nlet filecontent = \"\";\nfilecontent += msg.payload;\n\nfilecontent = HTMLEncode(filecontent);\n\n// Convert line feed to <br>\nfilecontent = filecontent.replace(/(?:\\r\\n|\\r|\\n)/g, '<br/>');\n\n\n\ntext += filecontent;\ntext += \"</div>\";\nmsg.payload = text;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 400,
        "wires": [
            [
                "eaa1b785a82474e8"
            ]
        ]
    },
    {
        "id": "a97a0941fe188d60",
        "type": "function",
        "z": "fe54917cf124892f",
        "name": "Get the file name",
        "func": "if (msg.payload.stat.size < 2000000) {\n    msg.filename = msg.payload.name;\n    return [msg, null];\n} else {\n    return [null, msg];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 480,
        "wires": [
            [
                "182a576703b2ab2c"
            ],
            [
                "ec346886c2c98b9b"
            ]
        ],
        "outputLabels": [
            "Folder selected",
            ""
        ]
    },
    {
        "id": "182a576703b2ab2c",
        "type": "file in",
        "z": "fe54917cf124892f",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 780,
        "y": 480,
        "wires": [
            [
                "535c68cb1d7c59eb"
            ]
        ]
    },
    {
        "id": "935e46db35cd8696",
        "type": "function",
        "z": "fe54917cf124892f",
        "name": "Div image",
        "func": "let text = \"<img src=\\\"data:image/png;base64,\";\ntext += msg.payload;\ntext += \"\\\" width=\\\"100%\\\"/>\";\nmsg.payload = text;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 480,
        "wires": [
            [
                "eaa1b785a82474e8"
            ]
        ]
    },
    {
        "id": "535c68cb1d7c59eb",
        "type": "base64",
        "z": "fe54917cf124892f",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 940,
        "y": 480,
        "wires": [
            [
                "935e46db35cd8696"
            ]
        ]
    },
    {
        "id": "d1b51e6221d81c9e",
        "type": "function",
        "z": "fe54917cf124892f",
        "name": "Change folder",
        "func": "\nif (msg.payload.stat.isDirectory) {\n\n    msg.topic = \"change\";\n    msg.payload = msg.payload.name;\n\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 280,
        "wires": [
            [
                "179b082f62a7823e"
            ]
        ]
    },
    {
        "id": "5e41127cc0347f3a",
        "type": "ui_text",
        "z": "fe54917cf124892f",
        "group": "7c3d1ffe5de85af4",
        "order": 4,
        "width": "9",
        "height": "1",
        "name": "",
        "label": "Folder:",
        "format": "{{msg.payload.start}}",
        "layout": "row-left",
        "className": "",
        "x": 520,
        "y": 140,
        "wires": []
    },
    {
        "id": "7cea2f877f87e3ca",
        "type": "function",
        "z": "fe54917cf124892f",
        "name": "Handle file actions",
        "func": "switch (msg.topic) {\n    case (\"delete\"):\n        msg.file = context.get(\"lastfile\");\n        if (msg.file!==undefined) {\n            msg.filename = msg.file.name;\n            return [msg,null];\n        }\n        break;\n    case (\"download\"):\n        msg.file = context.get(\"lastfile\");\n        if (msg.file !== undefined) {\n            //msg.template = \"<script>window.location.href = \\\"/download?filename=\"+msg.file.name+\"\\\";</script>\";\n            msg.template = \"<script>window.open('/download?filename=\" + encodeURIComponent(msg.file.name) + \"', '_blank');</script>\";\n            return [null, msg];\n        }\n        break;\n    default:\n        context.set(\"lastfile\", msg.payload);\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 300,
        "wires": [
            [
                "67b42c09f58f2a25"
            ],
            [
                "e4de1ad0101079c4"
            ]
        ]
    },
    {
        "id": "67b42c09f58f2a25",
        "type": "change",
        "z": "fe54917cf124892f",
        "name": "Set message",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Delete confirmation",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Are you sure you want to delete this file?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 300,
        "wires": [
            [
                "05edb6e023888c9e"
            ]
        ]
    },
    {
        "id": "05edb6e023888c9e",
        "type": "ui_toast",
        "z": "fe54917cf124892f",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Yes",
        "cancel": "No",
        "raw": false,
        "topic": "",
        "name": "Confirmation",
        "x": 1590,
        "y": 300,
        "wires": [
            [
                "cdb520329fcbd02e"
            ]
        ]
    },
    {
        "id": "cdb520329fcbd02e",
        "type": "switch",
        "z": "fe54917cf124892f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Yes",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1750,
        "y": 300,
        "wires": [
            [
                "d104e5fd4ef54ede"
            ]
        ]
    },
    {
        "id": "d104e5fd4ef54ede",
        "type": "file",
        "z": "fe54917cf124892f",
        "name": "Delete file",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 1900,
        "y": 300,
        "wires": [
            [
                "35c8d1a91b41682a"
            ]
        ]
    },
    {
        "id": "35c8d1a91b41682a",
        "type": "link out",
        "z": "fe54917cf124892f",
        "name": "link out 13",
        "mode": "link",
        "links": [
            "eed2521a12aabc7b"
        ],
        "x": 2015,
        "y": 300,
        "wires": []
    },
    {
        "id": "eed2521a12aabc7b",
        "type": "link in",
        "z": "fe54917cf124892f",
        "name": "Refresh File List",
        "links": [
            "35c8d1a91b41682a"
        ],
        "x": 165,
        "y": 360,
        "wires": [
            [
                "179b082f62a7823e"
            ]
        ]
    },
    {
        "id": "6ae3b5a5d657f2f8",
        "type": "function",
        "z": "fe54917cf124892f",
        "name": "Div text",
        "func": "msg.payload = \"<div>No preview available</div>\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 540,
        "wires": [
            [
                "eaa1b785a82474e8"
            ]
        ]
    },
    {
        "id": "e4de1ad0101079c4",
        "type": "ui_template",
        "z": "fe54917cf124892f",
        "group": "b9eaf4515438b94a",
        "name": "",
        "order": 18,
        "width": 0,
        "height": 0,
        "format": "",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1420,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "f6648be4a898f98c",
        "type": "ui_button",
        "z": "fe54917cf124892f",
        "name": "",
        "group": "b9eaf4515438b94a",
        "order": 2,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Download",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "file_download",
        "payload": "",
        "payloadType": "str",
        "topic": "download",
        "topicType": "str",
        "x": 1000,
        "y": 340,
        "wires": [
            [
                "7cea2f877f87e3ca"
            ]
        ]
    },
    {
        "id": "ec346886c2c98b9b",
        "type": "function",
        "z": "fe54917cf124892f",
        "name": "File too big",
        "func": "msg.payload = \"<div>File too large for preview</div>\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 440,
        "wires": [
            [
                "eaa1b785a82474e8"
            ]
        ]
    },
    {
        "id": "69b87840a116af60",
        "type": "ui_button",
        "z": "fe54917cf124892f",
        "name": "",
        "group": "7c3d1ffe5de85af4",
        "order": 7,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Download All",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "file_download",
        "payload": "",
        "payloadType": "str",
        "topic": "download_all",
        "topicType": "str",
        "x": 170,
        "y": 660,
        "wires": [
            [
                "cad526a5087b8c17"
            ]
        ]
    },
    {
        "id": "cad526a5087b8c17",
        "type": "function",
        "z": "fe54917cf124892f",
        "name": "Sure?",
        "func": "let folder = flow.get(\"currentfolder\");\nlet count = 0;\nlet total = 0;\n\nif (folder===undefined) {\n    return;\n}\n\nfor (var i = 0; i < folder.length; i++) {\n    if (folder[i].stat.isFile) {\n        count++\n        total+=folder[i].stat.size;\n    } \n}\n\nmsg.topic=\"Download all files?\"\nmsg.payload = \"This will zip \" + count + \" file(s) in this folder with a total size of \" + total.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")+\" bytes. Are you sure?\";\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 660,
        "wires": [
            [
                "cb68563af8c8e311"
            ]
        ]
    },
    {
        "id": "cb68563af8c8e311",
        "type": "ui_toast",
        "z": "fe54917cf124892f",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Yes",
        "cancel": "No",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Confirmation",
        "x": 510,
        "y": 660,
        "wires": [
            [
                "b24ec3db606a1cbe"
            ]
        ]
    },
    {
        "id": "b24ec3db606a1cbe",
        "type": "switch",
        "z": "fe54917cf124892f",
        "name": "Yes?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Yes",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 670,
        "y": 660,
        "wires": [
            [
                "c9f7a9a65bf09a87"
            ]
        ]
    },
    {
        "id": "c9f7a9a65bf09a87",
        "type": "function",
        "z": "fe54917cf124892f",
        "name": "Zip command",
        "func": "let folder = flow.get(\"folder\");\n\n// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nlet filename = folder.match(/([^\\/]*)\\/*$/)[1]+\"_\" + yyyy + mm + dd + hh + mmm+ss+\".zip\";\nlet filepath = folder + \"/\" + filename;\n\nmsg.save = {\"name\": filepath, \"fname\": filename };\n\nmsg.payload = \"zip \" + filepath+\" \"+folder+\"/*.*\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 660,
        "wires": [
            [
                "f8ff35c664e0633f"
            ]
        ]
    },
    {
        "id": "f8ff35c664e0633f",
        "type": "exec",
        "z": "fe54917cf124892f",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Execute zip",
        "x": 1050,
        "y": 660,
        "wires": [
            [
                "512acbb703e0e8c3"
            ],
            [],
            []
        ]
    },
    {
        "id": "020e593008574c70",
        "type": "change",
        "z": "fe54917cf124892f",
        "name": "Get zip details",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "save",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 620,
        "wires": [
            [
                "8a9563fc8d848d29",
                "7cea2f877f87e3ca"
            ]
        ]
    },
    {
        "id": "512acbb703e0e8c3",
        "type": "switch",
        "z": "fe54917cf124892f",
        "name": "Success?",
        "property": "rc.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1220,
        "y": 640,
        "wires": [
            [
                "020e593008574c70",
                "ba88a7d22f4dfc03"
            ],
            [
                "5ee1ccb527981c93"
            ]
        ]
    },
    {
        "id": "ba88a7d22f4dfc03",
        "type": "change",
        "z": "fe54917cf124892f",
        "name": "Notification",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Zip file containing all files in this folder has been generated. Click on Download above.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 660,
        "wires": [
            [
                "eaa1b785a82474e8"
            ]
        ]
    },
    {
        "id": "5ee1ccb527981c93",
        "type": "change",
        "z": "fe54917cf124892f",
        "name": "Failed notification",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Download all failed!",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Download All",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 700,
        "wires": [
            [
                "5bcf25f22298681c"
            ]
        ]
    },
    {
        "id": "5bcf25f22298681c",
        "type": "ui_toast",
        "z": "fe54917cf124892f",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1650,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "442a856796f14a64",
        "type": "ui_text_input",
        "z": "fe54917cf124892f",
        "name": "",
        "label": "Filter:",
        "tooltip": "",
        "group": "7c3d1ffe5de85af4",
        "order": 7,
        "width": "6",
        "height": "1",
        "passthru": false,
        "mode": "text",
        "delay": 300,
        "topic": "quickfilter",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 810,
        "y": 140,
        "wires": [
            [
                "09aeec3a5a2b5b59"
            ]
        ]
    },
    {
        "id": "5caa1aeabee2f1f9",
        "type": "change",
        "z": "fe54917cf124892f",
        "name": "Empty",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 140,
        "wires": [
            [
                "442a856796f14a64"
            ]
        ]
    },
    {
        "id": "905d3dfb9057ff1a",
        "type": "comment",
        "z": "f97f75b309eab0be",
        "name": "Auto Logger archiving",
        "info": "Generate file name that are to be archived.\n\nIdea is that this generates a list of file names for let's say between current day-5 days to current day-10 days, so all files that are 5-10 days old will get archived. And this can be executed daily or weekly, and the interval allows some overlap (e.g. the program fails, Node-Red was down, etc.)\n\nInject node should contain a JSON:\n{    \n    \"start\": 20,    \n    \"end\": 10\n}\n\nThis will generate file names D-20 to D-10 days.\nStart should be greather than end!\n",
        "x": 200,
        "y": 60,
        "wires": []
    },
    {
        "id": "4372b0073e72a9c2",
        "type": "function",
        "z": "f97f75b309eab0be",
        "name": "Maplin Filename generator",
        "func": "let output = [];\nfor (var i=msg.payload.end;i<msg.payload.start;i++) {\n    \n    // calculate the date\n    let now = new Date();\n    now.setTime(now.getTime() - 1000*60*60*24*i);\n    let yyyy = now.getFullYear();\n    let mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\n    let dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\n    let hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\n    let mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\n    let ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n    \n    let newfile = { \"topic\": \"archive\", \"payload\": \"\"};\n    // Generate out file name pattern\n    newfile.fname = \"maplin_\"+ yyyy + mm + dd + \".csv\";\n    // Full filename with path \n    newfile.filename = \"/home/ovum/datalog/\"+ newfile.fname;\n    \n    // Shell script only needs the filename without the path\n    newfile.payload = newfile.fname;\n    output.push(newfile);\n\n}\n\nreturn [output];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 140,
        "wires": [
            [
                "69b24cb2fe7768da"
            ]
        ]
    },
    {
        "id": "e5ce3db2f731dbe1",
        "type": "function",
        "z": "f97f75b309eab0be",
        "name": "Weather Station Filename generator",
        "func": "let output = [];\nfor (var i=msg.payload.end;i<msg.payload.start;i++) {\n    \n    // calculate the date\n    let now = new Date();\n    now.setTime(now.getTime() - 1000*60*60*24*i);\n    let yyyy = now.getFullYear();\n    let mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\n    let dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\n    let hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\n    let mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\n    let ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n    \n    let newfile = { \"topic\": \"archive\", \"payload\": \"\"};\n    // Generate out file name pattern\n    newfile.fname = \"weather_sensor_\"+ yyyy + mm + dd + \".csv\";\n    // Full filename with path \n    newfile.filename = \"/home/ovum/datalog/\"+ newfile.fname;\n    \n    // Shell script only needs the filename without the path\n    newfile.payload = newfile.fname;\n    output.push(newfile);\n\n}\n\nreturn [output];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 200,
        "wires": [
            [
                "69b24cb2fe7768da"
            ]
        ]
    },
    {
        "id": "4c74f8fa18ded457",
        "type": "inject",
        "z": "f97f75b309eab0be",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "40 02 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"start\":20,\"end\":10}",
        "payloadType": "json",
        "x": 190,
        "y": 160,
        "wires": [
            [
                "4372b0073e72a9c2",
                "e5ce3db2f731dbe1"
            ]
        ]
    },
    {
        "id": "93eafef28a811846",
        "type": "exec",
        "z": "f97f75b309eab0be",
        "command": "/home/ovum/log_upload.sh",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "File upload",
        "x": 790,
        "y": 140,
        "wires": [
            [],
            [],
            [
                "868be4750ae7a124"
            ]
        ]
    },
    {
        "id": "868be4750ae7a124",
        "type": "switch",
        "z": "f97f75b309eab0be",
        "name": "Return code",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 240,
        "wires": [
            [],
            [
                "bdc00bb3bd2088c2"
            ]
        ]
    },
    {
        "id": "42eb499cf6ef3fad",
        "type": "exec",
        "z": "f97f75b309eab0be",
        "command": "sudo rm ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "File delete",
        "x": 1210,
        "y": 140,
        "wires": [
            [],
            [],
            [
                "a7c4a9039bc72bf3"
            ]
        ]
    },
    {
        "id": "bdc00bb3bd2088c2",
        "type": "change",
        "z": "f97f75b309eab0be",
        "name": "Get filename",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filename",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 140,
        "wires": [
            [
                "42eb499cf6ef3fad"
            ]
        ]
    },
    {
        "id": "a7c4a9039bc72bf3",
        "type": "switch",
        "z": "f97f75b309eab0be",
        "name": "Return code",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1430,
        "y": 160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "69b24cb2fe7768da",
        "type": "delay",
        "z": "f97f75b309eab0be",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 720,
        "y": 340,
        "wires": [
            [
                "93eafef28a811846"
            ]
        ]
    },
    {
        "id": "97567ac25ab2d94d",
        "type": "comment",
        "z": "f97f75b309eab0be",
        "name": "log_upload.sh",
        "info": "ftp -inv 192.168.1.x << EOF\n    user <username> <password>\n    binary\n    cd backup/logs\n    lcd /home/pi/datalog\n    put $1\nEOF",
        "x": 770,
        "y": 80,
        "wires": []
    },
    {
        "id": "db645ecd948b2844",
        "type": "comment",
        "z": "f97f75b309eab0be",
        "name": "Auto Logger",
        "info": "",
        "x": 210,
        "y": 420,
        "wires": []
    },
    {
        "id": "f10d7e66de0d3791",
        "type": "function",
        "z": "f97f75b309eab0be",
        "name": "Set data",
        "func": "var now = new Date();\n\nmsg.payload = {\n    \"timestamp\" : now.getTime(),\n    \"temperature\" : msg.msg433.TEMP,\n    \"humidity\" : msg.msg433.HUM\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 480,
        "wires": [
            [
                "c2a671682fe6592b"
            ]
        ]
    },
    {
        "id": "c2a671682fe6592b",
        "type": "function",
        "z": "f97f75b309eab0be",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"maplin_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/home/ovum/datalog/\"+ msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 600,
        "wires": [
            [
                "45f2a31ff4c323b0"
            ]
        ]
    },
    {
        "id": "45f2a31ff4c323b0",
        "type": "fs-file-lister",
        "z": "f97f75b309eab0be",
        "name": "",
        "start": "/home/ovum/datalog/",
        "pattern": "",
        "folders": "*",
        "hidden": true,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 460,
        "y": 600,
        "wires": [
            [
                "d4ba1996386259cb",
                "98156f96119e8947"
            ]
        ]
    },
    {
        "id": "d4ba1996386259cb",
        "type": "debug",
        "z": "f97f75b309eab0be",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 630,
        "y": 520,
        "wires": []
    },
    {
        "id": "98156f96119e8947",
        "type": "switch",
        "z": "f97f75b309eab0be",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 600,
        "wires": [
            [
                "5a6942fe5b9a12a1"
            ],
            [
                "0694377f4ec8d7f1"
            ]
        ]
    },
    {
        "id": "a1841ba135f0083f",
        "type": "csv",
        "z": "f97f75b309eab0be",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": "timestamp,temperature,humidity",
        "skip": "0",
        "strings": true,
        "x": 950,
        "y": 580,
        "wires": [
            [
                "f28b75539578a54b"
            ]
        ]
    },
    {
        "id": "f28b75539578a54b",
        "type": "file",
        "z": "f97f75b309eab0be",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1110,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "b4b236ebb93df10b",
        "type": "csv",
        "z": "f97f75b309eab0be",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": false,
        "multi": "one",
        "ret": "\\n",
        "temp": "timestamp,temperature,humidity",
        "skip": "0",
        "strings": true,
        "x": 950,
        "y": 620,
        "wires": [
            [
                "f28b75539578a54b"
            ]
        ]
    },
    {
        "id": "5a6942fe5b9a12a1",
        "type": "change",
        "z": "f97f75b309eab0be",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 580,
        "wires": [
            [
                "a1841ba135f0083f"
            ]
        ]
    },
    {
        "id": "0694377f4ec8d7f1",
        "type": "change",
        "z": "f97f75b309eab0be",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 620,
        "wires": [
            [
                "b4b236ebb93df10b"
            ]
        ]
    },
    {
        "id": "a9a11686057f4886",
        "type": "inject",
        "z": "f97f75b309eab0be",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 480,
        "wires": [
            [
                "f10d7e66de0d3791"
            ]
        ]
    },
    {
        "id": "1a803f07cc90120c",
        "type": "comment",
        "z": "5ab99c650d95a3f7",
        "name": "Auto Logger archiving",
        "info": "Generate file name that are to be archived.\n\nIdea is that this generates a list of file names for let's say between current day-5 days to current day-10 days, so all files that are 5-10 days old will get archived. And this can be executed daily or weekly, and the interval allows some overlap (e.g. the program fails, Node-Red was down, etc.)\n\nInject node should contain a JSON:\n{    \n    \"start\": 20,    \n    \"end\": 10\n}\n\nThis will generate file names D-20 to D-10 days.\nStart should be greather than end!\n",
        "x": 120,
        "y": 100,
        "wires": []
    },
    {
        "id": "d2ff6a174db2e31c",
        "type": "function",
        "z": "5ab99c650d95a3f7",
        "name": "Maplin Filename generator",
        "func": "let output = [];\nfor (var i=msg.payload.end;i<msg.payload.start;i++) {\n    \n    // calculate the date\n    let now = new Date();\n    now.setTime(now.getTime() - 1000*60*60*24*i);\n    let yyyy = now.getFullYear();\n    let mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\n    let dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\n    let hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\n    let mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\n    let ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n    \n    let newfile = { \"topic\": \"archive\", \"payload\": \"\"};\n    // Generate out file name pattern\n    newfile.fname = \"maplin_\"+ yyyy + mm + dd + \".csv\";\n    // Full filename with path \n    newfile.filename = \"/home/pi/datalog/\"+ newfile.fname;\n    \n    // Shell script only needs the filename without the path\n    newfile.payload = newfile.fname;\n    output.push(newfile);\n\n}\n\nreturn [output];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 180,
        "wires": [
            [
                "7a235c67cf03169b"
            ]
        ]
    },
    {
        "id": "ef6a0345b487c67a",
        "type": "function",
        "z": "5ab99c650d95a3f7",
        "name": "Weather Station Filename generator",
        "func": "let output = [];\nfor (var i=msg.payload.end;i<msg.payload.start;i++) {\n    \n    // calculate the date\n    let now = new Date();\n    now.setTime(now.getTime() - 1000*60*60*24*i);\n    let yyyy = now.getFullYear();\n    let mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\n    let dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\n    let hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\n    let mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\n    let ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n    \n    let newfile = { \"topic\": \"archive\", \"payload\": \"\"};\n    // Generate out file name pattern\n    newfile.fname = \"weather_sensor_\"+ yyyy + mm + dd + \".csv\";\n    // Full filename with path \n    newfile.filename = \"/home/pi/datalog/\"+ newfile.fname;\n    \n    // Shell script only needs the filename without the path\n    newfile.payload = newfile.fname;\n    output.push(newfile);\n\n}\n\nreturn [output];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 240,
        "wires": [
            [
                "7a235c67cf03169b"
            ]
        ]
    },
    {
        "id": "57b433b54d60d842",
        "type": "inject",
        "z": "5ab99c650d95a3f7",
        "name": "Start",
        "props": [
            {
                "p": "payload",
                "v": "{\"start\":20,\"end\":10}",
                "vt": "json"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "40 02 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"start\":20,\"end\":10}",
        "payloadType": "json",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "d2ff6a174db2e31c",
                "ef6a0345b487c67a"
            ]
        ]
    },
    {
        "id": "88dd4d4e2aad8a95",
        "type": "exec",
        "z": "5ab99c650d95a3f7",
        "command": "/home/pi/log_upload.sh",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "File upload",
        "x": 710,
        "y": 180,
        "wires": [
            [],
            [],
            [
                "0b3583796f6d8c2e"
            ]
        ]
    },
    {
        "id": "0b3583796f6d8c2e",
        "type": "switch",
        "z": "5ab99c650d95a3f7",
        "name": "Return code",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 990,
        "y": 280,
        "wires": [
            [],
            [
                "32cf218615cd63ec"
            ]
        ]
    },
    {
        "id": "7e261706a323fb55",
        "type": "exec",
        "z": "5ab99c650d95a3f7",
        "command": "sudo rm ",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "File delete",
        "x": 1130,
        "y": 180,
        "wires": [
            [],
            [],
            [
                "d1d97b3222cf410b"
            ]
        ]
    },
    {
        "id": "32cf218615cd63ec",
        "type": "change",
        "z": "5ab99c650d95a3f7",
        "name": "Get filename",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filename",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 180,
        "wires": [
            [
                "7e261706a323fb55"
            ]
        ]
    },
    {
        "id": "d1d97b3222cf410b",
        "type": "switch",
        "z": "5ab99c650d95a3f7",
        "name": "Return code",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1350,
        "y": 200,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7a235c67cf03169b",
        "type": "delay",
        "z": "5ab99c650d95a3f7",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 640,
        "y": 380,
        "wires": [
            [
                "88dd4d4e2aad8a95"
            ]
        ]
    },
    {
        "id": "9fe6ab217aa31c86",
        "type": "comment",
        "z": "5ab99c650d95a3f7",
        "name": "log_upload.sh",
        "info": "ftp -inv 192.168.1.x << EOF\n    user <username> <password>\n    binary\n    cd backup/logs\n    lcd /home/pi/datalog\n    put $1\nEOF",
        "x": 690,
        "y": 120,
        "wires": []
    },
    {
        "id": "066c69cdeb8caefb",
        "type": "comment",
        "z": "5ab99c650d95a3f7",
        "name": "Auto Logger",
        "info": "",
        "x": 130,
        "y": 460,
        "wires": []
    },
    {
        "id": "3e0365c4cc1bbcb1",
        "type": "function",
        "z": "5ab99c650d95a3f7",
        "name": "Set data",
        "func": "var now = new Date();\n\nmsg.payload = {\n    \"timestamp\" : now.getTime(),\n    \"temperature\" : msg.msg433.TEMP,\n    \"humidity\" : msg.msg433.HUM\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 220,
        "y": 520,
        "wires": [
            [
                "6603a0940cf92caa"
            ]
        ]
    },
    {
        "id": "6603a0940cf92caa",
        "type": "function",
        "z": "5ab99c650d95a3f7",
        "name": "Filename generator",
        "func": "// Get the current time and convert it to text\nvar now = new Date();\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Generate out file name pattern\nmsg.fname = \"maplin_\"+ yyyy + mm + dd + \".csv\";\n// Full filename with path for the file node later\nmsg.filename = \"/home/pi/datalog/\"+ msg.fname;\n\n// We save the current payload into a different place on the msg object\nmsg.filecontent = msg.payload;\n\n// We are passing the file name search pattern to fs node to tell us if the file exists or not\nmsg.payload = {\"pattern\":msg.fname};\n\nnode.status({fill:\"blue\",shape:\"ring\",text:msg.fname});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 640,
        "wires": [
            [
                "8f9a687cdcf5c49a"
            ]
        ]
    },
    {
        "id": "8f9a687cdcf5c49a",
        "type": "fs-file-lister",
        "z": "5ab99c650d95a3f7",
        "name": "",
        "start": "/home/pi/datalog/",
        "pattern": "",
        "folders": "*",
        "hidden": true,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 380,
        "y": 640,
        "wires": [
            [
                "5fbae22e7bdba58d",
                "b3ae92e3472416ed"
            ]
        ]
    },
    {
        "id": "5fbae22e7bdba58d",
        "type": "debug",
        "z": "5ab99c650d95a3f7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 550,
        "y": 560,
        "wires": []
    },
    {
        "id": "b3ae92e3472416ed",
        "type": "switch",
        "z": "5ab99c650d95a3f7",
        "name": "",
        "property": "$count(msg.payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 640,
        "wires": [
            [
                "cf835898c3c4ad1c"
            ],
            [
                "827a31dfb027ca52"
            ]
        ]
    },
    {
        "id": "10ebb08952beefdf",
        "type": "csv",
        "z": "5ab99c650d95a3f7",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": true,
        "multi": "one",
        "ret": "\\n",
        "temp": "timestamp,temperature,humidity",
        "skip": "0",
        "strings": true,
        "x": 870,
        "y": 620,
        "wires": [
            [
                "3a89bd9c3a391d6e"
            ]
        ]
    },
    {
        "id": "3a89bd9c3a391d6e",
        "type": "file",
        "z": "5ab99c650d95a3f7",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1030,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "01fef77ca9edb324",
        "type": "csv",
        "z": "5ab99c650d95a3f7",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": false,
        "multi": "one",
        "ret": "\\n",
        "temp": "timestamp,temperature,humidity",
        "skip": "0",
        "strings": true,
        "x": 870,
        "y": 660,
        "wires": [
            [
                "3a89bd9c3a391d6e"
            ]
        ]
    },
    {
        "id": "cf835898c3c4ad1c",
        "type": "change",
        "z": "5ab99c650d95a3f7",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 620,
        "wires": [
            [
                "10ebb08952beefdf"
            ]
        ]
    },
    {
        "id": "827a31dfb027ca52",
        "type": "change",
        "z": "5ab99c650d95a3f7",
        "name": "Get file content",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "filecontent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 660,
        "wires": [
            [
                "01fef77ca9edb324"
            ]
        ]
    }
]